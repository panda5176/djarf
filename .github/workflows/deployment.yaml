name: Deployment
run-name: Deployment of ${{ github.repository }} through AWS ECS
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
jobs:
  deployment:
    runs-on: ubuntu-latest
    env:
      ECR_URI: ${{ secrets.ECR_URI }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Transfers authority from AWS ECR to Docker
        run: >
          aws ecr get-login-password |
          docker login --username AWS --password-stdin $ECR_URI
      - name: Build Docker image with compose
        run: docker compose build
      - name: Push Docker image to AWS ECR with compose
        run: docker compose push
      - name: Install AWS ECS CLI
        run: >
          sudo curl -Lo /usr/local/bin/ecs-cli
          https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
      - name: Apply execute permissions to ECS CLI binary
        run: sudo chmod +x /usr/local/bin/ecs-cli
      - name: Deploy updating AWS ECS service with AWS CLI
        run: >
          aws ecs update-service --service djarf --task-definition djarf
          --cluster djarf --force-new-deployment
